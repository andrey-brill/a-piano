

// common style for div & g elements

.keyboardKey {
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-color);
}

.black .keyboardKey {
    color: var(--white);
}

.white {

    svg {
        position: absolute;
        left: 0;
        top: 0;
    }

    > * {
        cursor: pointer;
        user-select: none;
    }

    div.key {
        background: var(--white-key-color);
    }

    path.key {
        fill: var(--white-key-color);
    }

    .shadow {
        background: var(--white-key-shadow-color);
    }

}


.black {

    > * {
        cursor: pointer;
    }

    .key {

        z-index: 1; // fixed touching black keys based on pointer position (before white keys was pressed)

        background: var(--black-key-top-color);

        &:not(.keyboardKey) {
            transform: translate(0, var(--pPaddingX2));
        }
    }


    .shadow {
        background: var(--black-key-shadow-color);
    }

    .glance {
        background: var(--black-key-color);
    }

}

.container {


    &:not(.pressed):not(.disabled) {

        &.white:hover path.key {
            fill: var(--white-key-hover-color);
        }

        &.white:hover div.key {
            background: var(--white-key-hover-color);
        }

        &.black:hover .key {
            background: var(--black-key-top-hover-color);
        }
    }

    &.pressed:not(.disabled) {

        &.white {

            .key {
                transform: translate(0, var(--pPaddingX1));
            }

            path.key {
                fill: var(--white-key-pressed-color);
            }

            div.key {
                background: var(--white-key-pressed-color);
            }

            .shadow {
                background: var(--white-key-shadow-pressed-color);
            }


        }

        &.black {

            .key {
                transform: translate(0, var(--pPaddingX1));
                background: var(--black-key-top-pressed-color);

                &:not(.keyboardKey) {
                    transform: translate(0, var(--pPaddingX4));
                }
            }

            .shadow {
                background: var(--black-key-shadow-pressed-color);
            }

            .glance {
                transform: translate(0, var(--pPaddingX1));
                background: var(--black-key-pressed-color);
            }

        }

    }

    &.disabled {

        > * {
            cursor: not-allowed !important;
        }

        .key {
            transform: translate(0, var(--pPaddingX1));
            background: var(--white-key-disabled-color);
        }

        .shadow {
            background: var(--white-key-shadow-color);
        }

    }

}
